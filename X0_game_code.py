# количество клеток в одной строке игрового поля
board_size = 3

# игровое поле, изначально оно заполнено числами от 1 до 9
board = [1, 2, 3, 4, 5, 6, 7, 8, 9]


def draw_board():
    '''Выводим игровое поле в консоль'''
    # печатаем верхнюю границу поля
    print('———' * (board_size + 1))

    # создаем каждую строчку игрового поля
    for i in range(board_size):
        # создаем строку с клетками и разделителями
        print('' * 3 + '|', board[i * board_size], '|', board[i * board_size + 1], '|', board[i * board_size + 2], '|')

        # создаем разделитель между строками
        if i < board_size - 1:
            print('———' * (board_size + 1))  # создаем горизонтальную границу между строками
    print('———' * (board_size + 1)) # создаем крайнюю границу игрового поля


def game_step(player_step, char):
    '''Выполнение хода игрока'''
    # проверяем, что номер клетки корректен (1-9) и клетка еще не занята
    if player_step > 9 or player_step < 1 or board[player_step - 1] in ('X', '0'):
        return False

    # если шаг корректен, обновляем игровое поле
    board[player_step - 1] = char
    return True


def check_win():
    '''Проверка на выйгрыш одного из игроков'''
    game_win = False

    # все возможные выигрышные комбинации
    win_combination = (
        (0, 1, 2), (3, 4, 5), (6, 7, 8),  # горизонтальные линии
        (0, 3, 6), (1, 4, 7), (2, 5, 8),  # вертикальные линии
        (0, 4, 8), (2, 4, 6)  # диагональные линии
    )

    # проверяем, есть ли выигрышная комбинация
    for position in win_combination:
        if board[position[0]] == board[position[1]] and board[position[1]] == board[position[2]]:
            game_win = board[position[0]]  # если комбинация найдена, то это победитель

    return game_win  # возвращаем символ победителя (X или 0), или False, если победителя нет


def start_game():
    '''Запуск игры'''
    # игрок по умолчанию
    current_player = 'X'
    # номер текущего шага
    step = 1

    # начальный вывод игрового поля
    draw_board()

    # основной цикл игры, пока не будет 10 ходов или пока не будет победителя
    while step < 10:
        # запрашиваем у игрока номер поля для хода
        player_step = input(f'Ход игрока {current_player}. Введите номер поля: ')

        # проверка, что введено число
        if player_step.isdigit():
            player_step = int(player_step)

            # проверяем, что введенный номер поля от 1 до 9
            if 1 <= player_step <= 9:
                if game_step(player_step, current_player):
                    print(f'Игрок {current_player} сделал свой ход!')
                    draw_board()

                    # проверяем, есть ли победитель после хода
                    winner = check_win()
                    if winner:
                        # если есть победитель, завершаем игру
                        print(f'Выиграл игрок {winner}! Поздравляем победителя!')
                        break  # завершаем игру после победы

                    # если победителя нет, меняем текущего игрока
                    current_player = '0' if current_player == 'X' else 'X'
                    step += 1  # увеличиваем номер шага
                else:
                    # если ход был невозможен (клетка уже занята), просим выбрать другую клетку
                    print('На этот номер игрового поля уже был сделан ход, выберите другой номер игрового поля.')
            else:
                # если введенный номер поля выходит за допустимый диапазон
                print('Введите номер игрового поля от 1 до 9.')
        else:
            # если введено не число
            print('Неверный ввод! Введите число от 1 до 9.')

    # если все шаги сделаны, но победителя нет - ничья
    if step == 10 and not check_win():
        print('Игра окончена. Ничья!')


# приветсвие
print('Добро пожаловать в игру крестики-нолики!')

# начинаем игру
start_game()
